# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    - always_use_package_imports
    - directives_ordering
    - avoid_relative_lib_imports
    - implementation_imports
    - require_trailing_commas
    - lines_longer_than_80_chars
    - sort_child_properties_last
    - avoid_unnecessary_containers
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - avoid_redundant_argument_values
    - avoid_print
    - avoid_dynamic_calls
    - use_function_type_syntax_for_parameters
    - unnecessary_null_checks
    - camel_case_types
    - file_names
    - library_names
    - prefer_const_declarations
    - null_closures
    - avoid_null_checks_in_equality_operators
    - prefer_single_quotes

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
